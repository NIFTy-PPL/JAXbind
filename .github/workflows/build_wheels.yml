name: Build all wheels
on: [workflow_dispatch]
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14" # Or latest, or a specific version
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: pypa/cibuildwheel@v2.23.2
        env:
          MACOSX_DEPLOYMENT_TARGET: '10.15'
          CIBW_ARCHS: auto64
          CIBW_BUILD_FRONTEND: build[uv]
          CIBW_SKIP: cp36-* cp37-* cp38-* pp* *-musllinux*
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: python -m pytest -x {project}/test
          CIBW_TEST_SKIP: cp36-* cp37-* cp38-* cp39-* cp310-* cp311-*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_S390X_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_PYPY_I686_IMAGE: manylinux_2_28
        with:
          package-dir: .
          output-dir: wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
